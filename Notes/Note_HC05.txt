ИНИЦИАЛИЗАЦИЯ zc-040:
1. Отключить питание
2. Зажать кнопку
3. Подать питание, удерживая кнопку
4. Отпустить через секунд 5
5. Светодиод моргает медленно теперь
6. Режим мини АТ включён
=	=	=	=	=	=	=	=	=	=	=	=	=	=	=	=	=
1. Подтянуть RxD HC-05 к высокому уровню - на МК это TxD 
2. Проверять уровень вывода LED (State): const 1 - connection, flash - connection is established
3. Подтягивать уровень EN (KEY) к 1 при старте для перехода в AT-команды
4. В АТ-режиме скорость 9600 бод
5. Пароль по умолчанию 1234
6. Добавление символов \r\n в конце АТ-команд
7. Последовательность команд АТ:
  7.1 Проверка соединения команда "АТ"
  7.2 AT+ORGL (сброс до заводских настроек)
  7.3 AT+NAME=Stroller (имя будет "Stroller")
  7.4 AT+ROLE=0 (ведомое устройство)
  7.5 AT+CLASS=0x100808 (Передача объекта-игрушка-транспортное средство)
  7.6 AT+UART=921600,0,0 (921600 бод, 1 стопбит, без бита паритета)
  7.7 Уровень EN (KEY) в 0  
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
1) Инициализация HC-05 при старте (потокобезопасна):
    функция может вызываться из любого места программы, если отпадёт соединение
    Разрешение прерывания на вывод STATE (PA5 в 0)
2) Прерывание PA5: выставить false в очередь queueHc05Ready; запрет прерывания PA5
3) Проверка queueYc05Ready в taskInterface. Вызов функции инициализации HC-05 при необходимости
4) Реализация interrupt UART1_Rx:
    Запомнить в буфер принятый байт; 
    если первый, то старт интервальный таймер; иначе сброс счётчик таймера
5) Функция старта интервального таймера, функция сброса счётчика таймера
6) Прерывание интервального таймера: 
    запрет прерывания UART1
    отстановка таймера, передача в streamInterface принятого буфера;
    сброс буфера приёма
    Разрешение прерывания UART1
7) Функция передачи пакета (потокобезопасна):
    Копирование параметров функции в структуру очереди queueTaskToDma
    Положить структуру в очередь
    Если DMA свободен - инициализация DMA
8) Прерывние DMA:
    Если queueTaskToDma не свободна, то инициализация новой транзакции передачи данных
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
#define MAX_SIZE_PACKET                   +
QueueHandle_t xQueueTaskToDma
QueueHandle_t xQueueHc05Ready
static uint8_t bufReceive[MAX_SIZE_PACKET] (interrupt)
typedef struct {} TPacketToDma;



    